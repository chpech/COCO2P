  
  [1X3 [33X[0;0YWL-Stable Fusions of Color Graphs[133X[101X
  
  
  [1X3.1 [33X[0;0YIntroduction[133X[101X
  
  [33X[0;0YOne  of  the fundamental methods how to derive new color graphs from a color
  graph  [22XÎ“[122X,  is  to  [13Xfuse[113X (i.e identify) colors. Color graphs that are derived
  from  [22XÎ“[122X in this way are called [13Xfusion color graphs[113X. Every fusion color graph
  [22Xâˆ†[122X  of [22XÎ“[122X defines a partition on the colors of [22XÎ“[122X. This partition is called the
  [13Xfusion[113X  associated  with  the  fusion color graph [22Xâˆ†[122X of [22XÎ“[122X. If [22Xâˆ†[122X is WL-stable,
  then its fusion is called a [13Xstable fusion[113X.[133X
  
  [33X[0;0YOne  of the fundamental algorithmical problems in algebraic combinatorics is
  to  enumerate  all  WL-stable fusion color graphs of a given color graph. At
  the  moment  [5Xcoco2p[105X  can solve a part of this problem â€“ namely starting from
  any WL-stable color graph [22XÎ“[122X it can enumerate (orbits of) stable fusions that
  lead to homogeneous WL-stable fusion color graphs. Such fusions we will call
  [13Xhomogeneous[113X.[133X
  
  [33X[0;0YComputing stable fusions, in [5Xcoco2p[105X is a two-stages process:[133X
  
  [31X1[131X   [33X[0;6YComputation of good sets of colors,[133X
  
  [31X2[131X   [33X[0;6YFitting together good sets to stable fusions.[133X
  
  [33X[0;0YGood  sets  are  the building blocks of stable fusions. A set of colors of a
  WL-stable  color  graph is called a [13Xgood set[113X if there exists a stable fusion
  of  the  cgr in which the set appears as a class. It is called a [13Xhomogeneous
  good  set[113X  if  it  is  part  of  a  homogeneous stable fusion. Note that the
  property  to  be  a (homogeneous) good set does only depend on the structure
  constants of the color graph.[133X
  
  
  [1X3.2 [33X[0;0YGood sets[133X[101X
  
  [1X3.2-1 BuildGoodSet[101X
  
  [33X[1;0Y[29X[2XBuildGoodSet[102X( [3Xtensor[103X, [3Xset[103X[, [3Xpart[103X] ) [32X function[133X
  
  [33X[0;0Y[3Xtensor[103X is the structure constants tensor of a WL-stable color graph [10Xcgr[110X. [3Xset[103X
  is  a set of colors of [10Xcgr[110X (i.e. of vertices of [3Xtensor[103X). [3Xpart[103X is supposed to
  be the coarsest stable partition of the colors of [10Xcgr[110X that contains [3Xset[103X as a
  class  (the  stability is not checked by the function). The function returns
  the corresponding good-set object.[133X
  
  [33X[0;0YIf  [3Xpart[103X  is  not  given,  then  it  is  computed. If this computation fails
  (because [3Xset[103X is not a good set), then [10Xfail[110X is returned.[133X
  
  [1X3.2-2 AsSet[101X
  
  [33X[1;0Y[29X[2XAsSet[102X( [3Xgs[103X ) [32X attribute[133X
  
  [33X[0;0YConverts the good set object [3Xgs[103X into a usual set.[133X
  
  [1X3.2-3 Length[101X
  
  [33X[1;0Y[29X[2XLength[102X( [3Xgs[103X ) [32X attribute[133X
  [33X[1;0Y[29X[2XSize[102X( [3Xgs[103X ) [32X attribute[133X
  
  [33X[0;0YReturns the number of elements of [3Xgs[103X.[133X
  
  [1X3.2-4 TensorOfGoodSet[101X
  
  [33X[1;0Y[29X[2XTensorOfGoodSet[102X( [3Xgs[103X ) [32X operation[133X
  
  [33X[0;0YReturns the structure constants tensor over which the good set [3Xgs[103X is [21Xgood[121X.[133X
  
  [1X3.2-5 PartitionOfGoodSet[101X
  
  [33X[1;0Y[29X[2XPartitionOfGoodSet[102X( [3Xgs[103X ) [32X operation[133X
  
  [33X[0;0YThis function returns the coarsest stable fusion (as a partition, i.e. a set
  of sets of colors), that contains [3Xgs[103X as a class.[133X
  
  
  [1X3.3 [33X[0;0YOrbits of good sets[133X[101X
  
  [33X[0;0Y[5Xcoco2p[105X  implements  a  datatype  for  orbits  of combinatorial objects. This
  section  describes  the  functions  that  deal with orbits of good sets. For
  every orbit of good sets, only the lexicographically smallest representative
  and  its set-wise stabilizer is saved. This allows to deal with good sets of
  color  graphs  of comparatively high rank, provided they have many algebraic
  automorphisms.[133X
  
  [1X3.3-1 HomogeneousGoodSetOrbits[101X
  
  [33X[1;0Y[29X[2XHomogeneousGoodSetOrbits[102X( [3Xtensor[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XHomogeneousGoodSetOrbits[102X( [3Xgroup[103X, [3Xtensor[103X[, [3Xmode[103X] ) [32X operation[133X
  
  [33X[0;0YLet  [22XG[122X  be  the  automorphism  group  of  [3Xtensor[103X.  This function returns all
  [22XG[122X-orbits of homogeneous good sets of [3Xtensor[103X.[133X
  
  [33X[0;0Y[10XHomogeneousGoodSetOrbits[110X  recognizes  the  option  [10X:sym[110X  or  [10X:prim[110X. With the
  former  option  it  returns  only orbits of symmetric good sets and with the
  latter  option only orbits of primitive good sets. It is possible to combine
  these options to [10X:sym,prim[110X.[133X
  
  [1X3.3-2 HomogeneousSymGoodSetOrbits[101X
  
  [33X[1;0Y[29X[2XHomogeneousSymGoodSetOrbits[102X( [3Xtensor[103X ) [32X attribute[133X
  
  [33X[0;0YThis  function  returns  all  orbits  of  orbits of symmetric good sets with
  respect to the automorphism group of [3Xtensor[103X.[133X
  
  [1X3.3-3 HomogeneousASymGoodSetOrbits[101X
  
  [33X[1;0Y[29X[2XHomogeneousASymGoodSetOrbits[102X( [3Xtensor[103X ) [32X attribute[133X
  
  [33X[0;0YThis  function  returns  all  orbits  of orbits of asymmetric good sets with
  respect to the automorphism group of [3Xtensor[103X.[133X
  
  [1X3.3-4 GoodSetOrbit[101X
  
  [33X[1;0Y[29X[2XGoodSetOrbit[102X( [3Xgroup[103X, [3Xgs[103X[, [3Xstab[103X] ) [32X operation[133X
  [33X[1;0Y[29X[2XGoodSetOrbitNC[102X( [3Xgroup[103X, [3Xgs[103X[, [3Xstab[103X] ) [32X operation[133X
  
  [33X[0;0Y[3Xgs[103X  is  a  good set. [3Xgroup[103X has to be a subgroup of the automorphism group of
  [10XTensorOfGoodSet(gs)[110X.  [3Xstab[103X (if given) has to be the full set-wise stabilizer
  of [3Xgs[103X in [3Xgroup[103X.[133X
  
  [33X[0;0YThe  function  constructs  a  [5Xcoco2p[105X-orbit object of the setwise orbit of [3Xgs[103X
  under  [3Xgroup[103X.  In  the  second  variant [5Xcoco2p[105X makes no efforts to check the
  consistency of the input data.[133X
  
  [1X3.3-5 CanonicalRepresentativeOfCocoOrbit[101X
  
  [33X[1;0Y[29X[2XCanonicalRepresentativeOfCocoOrbit[102X( [3Xgsorb[103X ) [32X operation[133X
  
  [33X[0;0YThis function returns the lexicographically smallest element of the orbit of
  good sets [3Xgsorb[103X.[133X
  
  [1X3.3-6 Representative[101X
  
  [33X[1;0Y[29X[2XRepresentative[102X( [3Xgsorb[103X ) [32X operation[133X
  
  [33X[0;0YThis  function  returns  any element of the orbit of good sets [3Xgsorb[103X. At the
  moment it in fact returns the lexicographically smallest element.[133X
  
  [1X3.3-7 UnderlyingGroupOfCocoOrbit[101X
  
  [33X[1;0Y[29X[2XUnderlyingGroupOfCocoOrbit[102X( [3Xgsorb[103X ) [32X operation[133X
  
  [33X[0;0YThis function returns the group under which [3Xgsorb[103X is an orbit.[133X
  
  [1X3.3-8 StabilizerOfCanonicalRepresentative[101X
  
  [33X[1;0Y[29X[2XStabilizerOfCanonicalRepresentative[102X( [3Xgsorb[103X ) [32X operation[133X
  
  [33X[0;0YThis      function      returns      the      setwise      stabilizer     of
  [10XCanonicalRepresentativeOfCocoOrbit(gsorb)[110X                                 in
  [10XUnderlyingGroupOfCocoOrbit(gsorb)[110X.[133X
  
  [1X3.3-9 Size[101X
  
  [33X[1;0Y[29X[2XSize[102X( [3Xgsorb[103X ) [32X method[133X
  
  [33X[0;0Yreturns the size of [3Xgsorb[103X.[133X
  
  [1X3.3-10 AsList[101X
  
  [33X[1;0Y[29X[2XAsList[102X( [3Xgsorb[103X ) [32X method[133X
  
  [33X[0;0Yexpands the [5Xcoco2p[105X-orbit object [3Xgsorb[103X into a list of good sets.[133X
  
  [1X3.3-11 AsSet[101X
  
  [33X[1;0Y[29X[2XAsSet[102X( [3Xgsorb[103X ) [32X method[133X
  
  [33X[0;0Yexpands the [5Xcoco2p[105X-orbit object [3Xgsorb[103X into a set of good sets.[133X
  
  [1X3.3-12 SubOrbitsOfCocoOrbit[101X
  
  [33X[1;0Y[29X[2XSubOrbitsOfCocoOrbit[102X( [3Xgroup[103X, [3Xgsorb[103X ) [32X operation[133X
  
  [33X[0;0Y[3Xgroup[103X is a subgroup of the underlying group of the orbit of good sets [3Xgsorb[103X.
  The given orbit splits into suborbits under this group. The function returns
  a list of these suborbits.[133X
  
  [1X3.3-13 SubOrbitsWithInvariantPropertyOfCocoOrbit[101X
  
  [33X[1;0Y[29X[2XSubOrbitsWithInvariantPropertyOfCocoOrbit[102X( [3Xgroup[103X, [3Xgsorb[103X, [3Xprop[103X ) [32X operation[133X
  
  [33X[0;0Y[3Xprop[103X is a function that takes a single good set as argument and returns [10Xtrue[110X
  or  [10Xfalse[110X.  It  has to be invariant under the set-wise action of [3Xgroup[103X. Note
  that this property is not checked by the function.[133X
  
  [33X[0;0YThis function does the same as[133X
  
  [4X[32X[104X
    [4XFiltered(SubOrbitsOfCocoOrbit(group,gsorb), x->prop(Representative(x)));[104X
  [4X[32X[104X
  
  [33X[0;0YHowever, the former code is generally much less efficient than calling[133X
  
  [4X[32X[104X
    [4XSubOrbitsWithInvariantPropertyOfCocoOrbit(group,gsorb,prop);[104X
  [4X[32X[104X
  
  
  [1X3.4 [33X[0;0YFusions[133X[101X
  
  [1X3.4-1 FusionFromPartition[101X
  
  [33X[1;0Y[29X[2XFusionFromPartition[102X( [3Xtensor[103X, [3Xpart[103X ) [32X function[133X
  [33X[1;0Y[29X[2XFusionFromPartitionNC[102X( [3Xtensor[103X, [3Xpart[103X ) [32X function[133X
  
  [33X[0;0YIf  [3Xtensor[103X  is  the  structure constants tensor of the WL-stable color graph
  [10Xcgr[110X,  and  if  [3Xpart[103X  is  a  partition of the colors of [10Xcgr[110X (a set of sets of
  colors),  then this function returns a fusion-object, or [10Xfail[110X if [3Xpart[103X is not
  a fusion of [10Xcgr[110X.[133X
  
  [33X[0;0YThe  second  variant  [10XFusionFromPartitionNC[110X  does not test whether [3Xpart[103X is a
  fusion of [10Xcgr[110X.[133X
  
  [1X3.4-2 AsPartition[101X
  
  [33X[1;0Y[29X[2XAsPartition[102X( [3Xfusion[103X ) [32X attribute[133X
  
  [33X[0;0YConverts the fusion-object [3Xfusion[103X into a set of sets of colors.[133X
  
  [1X3.4-3 PartitionOfFusion[101X
  
  [33X[1;0Y[29X[2XPartitionOfFusion[102X( [3Xfusion[103X ) [32X operation[133X
  
  [33X[0;0YConverts  the  fusion  object  [3Xfusion[103X into a list of sets. In contrast to te
  result  of  [10XAsPartition(fusion)[110X,  the resulting list of classes is sorted in
  short-lex  order.  This  means  that  first  it  is sorted by cardinality of
  classes, and then the classes of equal size are sorted lexicographically. It
  should be mentioned that the result of [10XPartitionOfFusion[110X is immutable.[133X
  
  [1X3.4-4 TensorOfFusion[101X
  
  [33X[1;0Y[29X[2XTensorOfFusion[102X( [3Xfusion[103X ) [32X operation[133X
  
  [33X[0;0Yreturns  the  structure  constants tensor, over which the fusion [3Xfusion[103X is a
  stable fusion.[133X
  
  [1X3.4-5 RankOfFusion[101X
  
  [33X[1;0Y[29X[2XRankOfFusion[102X( [3Xfusion[103X ) [32X attribute[133X
  [33X[1;0Y[29X[2XRank[102X( [3Xfusion[103X ) [32X method[133X
  
  [33X[0;0Yreturns the number of classes of [3Xfusion[103X.[133X
  
  [1X3.4-6 OrderOfFusion[101X
  
  [33X[1;0Y[29X[2XOrderOfFusion[102X( [3Xfusion[103X ) [32X attribute[133X
  [33X[1;0Y[29X[2XOrder[102X( [3Xfusion[103X ) [32X method[133X
  
  [33X[0;0Yreturns the order of the underlying tensor of [3Xfusion[103X.[133X
  
  
  [1X3.5 [33X[0;0YOrbits of fusions[133X[101X
  
  [33X[0;0Y[5Xcoco2p[105X  implements  a  datatype  for  orbits  of combinatorial objects. This
  section describes the functions that deal with orbits of stable fusions. For
  every  orbit  of  fusions, only the smallest representative in the short-lex
  order  and  its partition-wise stabilizer is saved. This allows to deal with
  fusions of color graphs of comparatively high rank.[133X
  
  [1X3.5-1 HomogeneousFusionOrbits[101X
  
  [33X[1;0Y[29X[2XHomogeneousFusionOrbits[102X( [3Xtensor[103X ) [32X attribute[133X
  [33X[1;0Y[29X[2XHomogeneousFusionOrbits[102X( [3Xgroup[103X, [3Xtensor[103X ) [32X method[133X
  
  [33X[0;0Y[3Xgroup[103X  is supposed to consist only of automorphisms of [3Xtensor[103X. [5Xcoco2p[105X learns
  new automorphisms by checking this property. If group is not given, then the
  full automorphism group of [3Xtensor[103X is taken for [3Xgroup[103X.[133X
  
  [33X[0;0YThis function returns all [3Xgroup[103X-orbits of homogeneous stable fusions.[133X
  
  [1X3.5-2 PosetOfHomogeneousFusionOrbits[101X
  
  [33X[1;0Y[29X[2XPosetOfHomogeneousFusionOrbits[102X( [3Xcgr[103X ) [32X function[133X
  
  [33X[0;0Y[3Xcgr[103X  is  a  WL-stable color graph. The function creates a poset of orbits of
  fusions  of  the  tensor  of  structure  constants  of  [3Xcgr[103X  under the color
  automorphism group of [3Xcgr[103X. An orbit [22Xo1[122X is below an orbit [22Xo2[122X if every element
  of [22Xo1[122X is coarser than some element [22Xo2[122X.[133X
  
  [33X[0;0YThis  function  accepts  the  option [10X:runtime[110X. If it is given, then the time
  taken  for  the  comutation  of  the  poset is stored as an attribute of the
  resulting poset. When displaying this poset, the runtime becomes part of the
  output.[133X
  
  [1X3.5-3 GraphicCocoPoset[101X
  
  [33X[1;0Y[29X[2XGraphicCocoPoset[102X( [3Xposet[103X ) [32X method[133X
  
  [33X[0;0Y[3Xposet[103X   is   a   [5Xcoco2p[105X-poset   of   fusion   orbits,   obtained,  e.g.,  by
  [2XPosetOfHomogeneousFusionOrbits[102X  ([14X3.5-2[114X).  This  function creates a graphical
  representation of this poset. The labels of the nodes of the graphical poset
  correspond  to  the  indices  in  the given poset. When invoked in [5XXGAP[105X, the
  context-menu  of  each  node gives additional information about the node. If
  for  some node it is known whether the underlying color graph is Schurian or
  not, then this is made visible in the graphical poset. Nodes for which it is
  not  known whether the cgr is Schurian, are represented by squares. Schurian
  nodes  are represented by circles, and non-Schurian nodes are represented by
  diamonds.[133X
  
  [33X[0;0YThis  function  is  available  only from [5XXGAP[105X or within [5XJupyter-GAP[105X when the
  package [5XFrancy[105X was loaded before [5Xcoco2p[105X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xpos:=PosetOfHomogeneousFusionOrbits(BIKColorGraph(4));[127X[104X
    [4X[28X<poset of fusion orbits with with 5 elements>[128X[104X
    [4X[25Xgap>[125X [27XGraphicCocoPoset(pos);[127X[104X
    [4X[28X<graphic poset "PosetOfFusionOrbits">[128X[104X
    [4X[25Xgap>[125X [27X[127X[104X
    [4X[28X	    [128X[104X
  [4X[32X[104X
  
  [1X3.5-4 Display[101X
  
  [33X[1;0Y[29X[2XDisplay[102X( [3Xposet[103X ) [32X method[133X
  
  [33X[0;0YThis function prints information about a representative from each element of
  [3Xposet[103X,  together  with  information  of  how  the  elements are contained in
  eachother.[133X
  
  [33X[0;0YThis function recognizes a number of options:[133X
  
  [8X[10X:filter:=func[110X[8X[108X
        [33X[0;6Yfunc  is  a  function which gets as argument a color graph and returns
        [10Xtrue[110X    or    [10Xfalse[110X.   If   this   option   is   given,   only   those
        orbit-representatives [10Xcgr[110X from [3Xposet[103X are displayed for which [10Xfunc(cgr)[110X
        returns [10Xtrue[110X.[133X
  
  [8X[10X:nonschurian[110X[8X[108X
        [33X[0;6YIf  this  option  is given, only orbit representatives of non-Schurian
        color graphs from [3Xposet[103X are displayed.[133X
  
  [8X[10X:long[110X[8X[108X
        [33X[0;6YIf  this  option  is  given,  more information about symmetries of the
        representatives  of  the  orbits  in [3Xposet[103X, like the generators of the
        automorphism group, is added to the output.[133X
  
  [8X[10X:schurianfission[110X[8X[108X
        [33X[0;6YIf  this  option  is  given,  foe  each  element of [3Xposet[103X the Schurian
        fission  of  its  representative  is computed. In case that this color
        graph  is  contained in any of the orbit from [3Xposet[103X, the index of this
        orbit is indicated in the output.[133X
  
  [8X[10X:fvc[110X[8X[108X
        [33X[0;6YThe  effect of this option is that for every orbit representative that
        is  corresponding  to a strongly regular graph, it is computed whether
        or  not  this  graph satisfies the four-vertex condition. In case that
        this is true, the parameters [22X(Î±,Î²)[122X are added to the output.[133X
  
  [8X[10X:onlyfvc[110X[8X[108X
        [33X[0;6YIf  this  option  is  given,  then  only  information  of  such  orbit
        representatives  is  given  that correspond to strongly regular graphs
        with the four-vertex condition.[133X
  
  [8X[10X:cisomap[110X[8X[108X
        [33X[0;6YIf  this  option is given, then for each orbit representative of [3Xposet[103X
        the smallest index in [3Xposet[103X to a color isomorphic orbit representative
        is computed and displayed.[133X
  
  [8X[10X:date[110X[8X[108X
        [33X[0;6YWhen  this  option  is  given,  then  the  actual date is added to the
        output.[133X
  
  [8X[10X:runtime[110X[8X[108X
        [33X[0;6YIf  this  option  is  given, then the time it took to compute [3Xposet[103X is
        added to the output (if this time is known).[133X
  
  [8X[10X:strucexp:=n[110X[8X[108X
        [33X[0;6YThis option creates a heuristic condition whether or not the structure
        description  of  some  symetry-group  should  be computed. The command
        [10XStructureDescription(group)[110X  tends to be slow whenever the exponent of
        prime-divisor  of the order of [10Xgroup[110X is large. If the exponent of such
        a  prime  divisor  is greated than [10Xn[110X then the structure description of
        [10Xgroup[110X is not computed. If the structure description of [10Xgroup[110X was known
        before, then it is still displayed in the output.[133X
  
        [33X[0;6YThe standard value for [10Xn[110X is [22X12[122X.[133X
  
  [1X3.5-5 FusionOrbit[101X
  
  [33X[1;0Y[29X[2XFusionOrbit[102X( [3Xgroup[103X, [3Xfusion[103X[, [3Xstab[103X] ) [32X operation[133X
  [33X[1;0Y[29X[2XFusionOrbitNC[102X( [3Xgroup[103X, [3Xfusion[103X[, [3Xstab[103X] ) [32X operation[133X
  
  [33X[0;0Y[3Xfusion[103X  is  a  fusion object. [3Xgroup[103X has to be a subgroup of the automorphism
  group  of  [10XTensorOfFusion(fusion)[110X.  [3Xstab[103X  (if  given)  has  to  be  the full
  partition-wise stabilizer of [3Xfusion[103X in [3Xgroup[103X.[133X
  
  [33X[0;0YThe function constructs a [5Xcoco2p[105X-orbit object of the partition-wise orbit of
  [3Xfusion[103X under [3Xgroup[103X.[133X
  
  [33X[0;0YIn  the  second variant no checks of consistency of the input parameters are
  done.[133X
  
  [1X3.5-6 CanonicalRepresentativeOfCocoOrbit[101X
  
  [33X[1;0Y[29X[2XCanonicalRepresentativeOfCocoOrbit[102X( [3Xfusionorb[103X ) [32X operation[133X
  
  [33X[0;0YThis  function  returns the smallest element (in the short-lex order) of the
  orbit of fusions [3Xfusionorb[103X.[133X
  
  [1X3.5-7 Representative[101X
  
  [33X[1;0Y[29X[2XRepresentative[102X( [3Xfusionorb[103X ) [32X operation[133X
  
  [33X[0;0YThis function returns any element of the orbit of fusions sets [3Xfusionorb[103X. At
  the moment it in fact returns the canonical representative.[133X
  
  [1X3.5-8 UnderlyingGroupOfCocoOrbit[101X
  
  [33X[1;0Y[29X[2XUnderlyingGroupOfCocoOrbit[102X( [3Xfusionorb[103X ) [32X operation[133X
  
  [33X[0;0YThis function returns the group under which [3Xfusionorb[103X is an orbit.[133X
  
  [1X3.5-9 StabilizerOfCanonicalRepresentative[101X
  
  [33X[1;0Y[29X[2XStabilizerOfCanonicalRepresentative[102X( [3Xfusion[103X ) [32X operation[133X
  
  [33X[0;0YThis     function     returns     the     partition-wise    stabilizer    of
  [10XCanonicalRepresentativeOfCocoOrbit(fusionorb)[110X                             in
  [10XUnderlyingGroupOfCocoOrbit(fusionorb)[110X.[133X
  
  [1X3.5-10 Size[101X
  
  [33X[1;0Y[29X[2XSize[102X( [3Xfusionorb[103X ) [32X method[133X
  
  [33X[0;0Yreturns the size of [3Xfusionorb[103X.[133X
  
  [1X3.5-11 AsList[101X
  
  [33X[1;0Y[29X[2XAsList[102X( [3Xfusionorb[103X ) [32X method[133X
  
  [33X[0;0Ys expands the [5Xcoco2p[105X-orbit object [3Xfusionorb[103X into a list of fusions.[133X
  
  [1X3.5-12 AsSet[101X
  
  [33X[1;0Y[29X[2XAsSet[102X( [3Xfusionorb[103X ) [32X method[133X
  
  [33X[0;0Yexpands the [5Xcoco2p[105X-orbit object [3Xfusionorb[103X into a set of fusions.[133X
  
  [1X3.5-13 SubOrbitsOfCocoOrbit[101X
  
  [33X[1;0Y[29X[2XSubOrbitsOfCocoOrbit[102X( [3Xgroup[103X, [3Xfusion[103X ) [32X operation[133X
  
  [33X[0;0Y[3Xgroup[103X  is  a  subgroup  of  the  underlying  group  of  the orbit of fusions
  [3Xfusionorb[103X.  The  given  orbit  splits  into  suborbits under this group. The
  function returns a list of these suborbits.[133X
  
  [1X3.5-14 SubOrbitsWithInvariantPropertyOfCocoOrbit[101X
  
  [33X[1;0Y[29X[2XSubOrbitsWithInvariantPropertyOfCocoOrbit[102X( [3Xgroup[103X, [3Xfusionorb[103X, [3Xprop[103X ) [32X operation[133X
  
  [33X[0;0Y[3Xprop[103X  is  a function that takes a single fusion as argument and returns [10Xtrue[110X
  or  [10Xfalse[110X.  It has to be invariant under the partition-wise action of [3Xgroup[103X.
  Note that the invariance is not checked by the function.[133X
  
  [33X[0;0YThis function does the same as[133X
  
  [4X[32X[104X
    [4XFiltered(SubOrbitsOfCocoOrbit(group,fusionorb), x->prop(Representative(x)));[104X
  [4X[32X[104X
  
  [33X[0;0YHowever, the former code is generally much less efficient than calling[133X
  
  [4X[32X[104X
    [4XSubOrbitsWithInvariantPropertyOfCocoOrbit(group,fusion,prop);[104X
  [4X[32X[104X
  
